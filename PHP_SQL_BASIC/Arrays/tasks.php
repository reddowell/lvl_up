<?php

//      1. Заполните массив следующим образом: в первый элемент запишите 'x', во второй 'xx', в третий 'xxx' и так далее

$arr_task1 = [];
for ($i = 0; $i < 10; $i++) {
    for ($j = 0; $j < $i; $j++) {
        $arr_task1[$i] .= 'x';
    }
}

echo '<pre>';
var_dump($arr_task1);


//      2. Сделайте функцию arrayFill, которая будет заполнять массив заданными значениями. Первым параметром функция
//      принимает значение, которым заполнять массив, а вторым - сколько элементов должно быть в массиве.
//      Пример: arrayFill('x', 5) сделает массив ['x', 'x', 'x', 'x', 'x'].

function arrayFill($symbol, $col)
{
    $arr = [];
    for ($i = 0; $i < $col; $i++) {
        $arr[] = $symbol;
    }
    return $arr;
}

$myArr = arrayFill('x', 5);
var_dump($myArr);


//      3. Дан массив с числами. Узнайте сколько элементов с начала массива надо сложить, чтобы в сумме получилось
//      больше 10-ти. Считайте, что в массиве есть нужное количество элементов.

$arr_task3 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
$sum = 0;
foreach ($arr_task3 as $key => $element) {
    $sum += $element;
    if ($sum > 10) {
        echo $key + 1;
        break;
    }
}


//      4. Дан двухмерный массив с числами, например [[1, 2, 3], [4, 5], [6]]. Найдите сумму элементов этого массива.
//      Массив, конечно же, может быть произвольным

$arr_task4 = [1, [1, 2, 3], [4, 5,[6,7,8, [10,11,12]]], [13]];
function printArrays($arr)
{
    foreach ($arr as $element) {
        if (is_array($element)) {
            printArrays($element);
        } else echo $element;
    }
}
printArrays($arr_task4);


//      5. С помощью двух циклов создайте массив [[1, 2, 3], [4, 5, 6], [7, 8, 9]]

$arr_task5 = [];
$col_task5 = 1;
for ($i = 0;$i < 3;$i++){
    for ($j = 0;$j < 3;$j++){
        $arr_task5[$i][$j] = $col_task5;
        $col_task5++;
    }
}
var_dump($arr_task5);

echo '</pre>';

